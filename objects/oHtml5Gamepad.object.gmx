<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gamepad in HTML5
global.bStartPressed = false;
global.bStartPreviousState = false;
global.bJumpPressed = false;
global.bJumpPressedPreviousState = false;
global.bJumpReleased = false;
global.bJumpReleasedPreviousState = false;
global.bAttackPressed = false;
global.bAttackPressedPreviousState = false;
global.bAttackReleased = false;
global.bAttackReleasedPreviousState = false;
global.bItemPressed = false;
global.bItemPreviousState = false;
global.bRunPressed = false;
global.bRunPreviousState = false;
global.bBombPressed = false;
global.bBombPreviousState = false;
global.bRopePressed = false;
global.bRopePreviousState = false;
global.bFlarePressed = false;
global.bFlarePreviousState = false;
global.bPayPressed = false;
global.bPayPreviousState = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gamepad in HTML5
global.bStartPressed = false;
global.bJumpPressed = false;
global.bJumpReleased = false;
global.bAttackPressed = false;
global.bAttackReleased = false;
global.bItemPressed = false;
global.bRunPressed = false;
global.bBombPressed = false;
global.bRopePressed = false;
global.bFlarePressed = false;
global.bPayPressed = false;
global.bBombPressed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gamepad in HTML5
if (global.html5Build) {
    //Start
    if (html5_gamepad_button_check(global.joyid, global.joyStartVal)) {
        if (global.bStartPreviousState == false) {
            global.bStartPressed = true;
            global.bStartPreviousState = true;
        }
    } else {
        global.bStartPreviousState = false;
    }
    //Jump
    if (html5_gamepad_button_check(global.joyid, global.joyJumpVal)) {
        global.bJumpReleasedPreviousState = false;
        if (global.bJumpPressedPreviousState == false) {
            global.bJumpPressed = true;
            global.bJumpPressedPreviousState = true;
        }
    } else {
        global.bJumpPressedPreviousState = false;
        if (global.bJumpReleasedPreviousState == false) {
            global.bJumpReleased = true;
            global.bJumpReleasedPreviousState = true;
        }
    }
    //Attack
    if (html5_gamepad_button_check(global.joyid, global.joyAttackVal)) {
        global.bAttackReleasedPreviousState = false;
        if (global.bAttackPressedPreviousState == false) {
            global.bAttackPressed = true;
            global.bAttackPressedPreviousState = true;
        }
    } else {
        global.bAttackPressedPreviousState = false;
        if (global.bAttackReleasedPreviousState == false) {
            global.bAttackReleased = true;
            global.bAttackReleasedPreviousState = true;
        }
    }
    //Item
    if (html5_gamepad_button_check(global.joyid, global.joyItemVal)) {
        if (global.bItemPreviousState == false) {
            global.bItemPressed = true;
            global.bItemPreviousState = true;
        }
    } else {
        global.bItemPreviousState = false;
    }
    //Bomb
    if (html5_gamepad_button_check(global.joyid, global.joyBombVal)) {
        if (global.bBombPreviousState == false) {
            global.bBombPressed = true;
            global.bBombPreviousState = true;
        }
    } else {
        global.bBombPreviousState = false;
    }
    //Run
    if (html5_gamepad_button_check(global.joyid, global.joyRunVal)) {
        if (global.bRunPreviousState == false) {
            global.bRunPressed = true;
            global.bRunPreviousState = true;
        }
    } else {
        global.bRunPreviousState = false;
    }
    //Rope
    if (html5_gamepad_button_check(global.joyid, global.joyRopeVal)) {
        if (global.bRopePreviousState == false) {
            global.bRopePressed = true;
            global.bRopePreviousState = true;
        }
    } else {
        global.bRopePreviousState = false;
    }
    //Flare
    if (html5_gamepad_button_check(global.joyid, global.joyFlareVal)) {
        if (global.bFlarePreviousState == false) {
            global.bFlarePressed = true;
            global.bFlarePreviousState = true;
        }
    } else {
        global.bFlarePreviousState = false;
    }
    //Pay
    if (html5_gamepad_button_check(global.joyid, global.joyPayVal)) {
        if (global.bPayPreviousState == false) {
            global.bPayPressed = true;
            global.bPayPreviousState = true;
        }
    } else {
        global.bPayPreviousState = false;
    }
    alarm[0] = 1;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if any gamepad connected (HTML5)
if (global.html5Build) {
    global.gamepadOn = html5_gamepad_connected();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
